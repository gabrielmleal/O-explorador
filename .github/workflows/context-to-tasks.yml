name: Context to Tasks Orchestrator

on:
  workflow_dispatch:
    inputs:
      context:
        description: 'Project context or requirements to decompose'
        required: true
        type: string
      max_tasks:
        description: 'Maximum number of tasks to create'
        required: false
        default: '10'
        type: string
  issues:
    types: [opened, edited]

jobs:
  decompose-and-create-task-comments:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'context-input'))
    
    permissions:
      contents: read
      issues: write
      id-token: write
      actions: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Analyze context with Claude Code
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          custom_instructions: |
            Read CLAUDE.md and break down this context into implementable tasks:

            ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.context || github.event.issue.body }}

            Create tasks.json with structure:
            {
              "tasks": [{"title": "...", "body": "..."}],
              "parent_issue": ${{ github.event.issue.number || null }}
            }

            Max tasks: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.max_tasks || '10' }}

      - name: Create task comments from tasks (with PAT)
        id: create-comments-pat
        continue-on-error: true
        uses: actions/github-script@v7
        env:
          PARENT_ISSUE_NUMBER: ${{ github.event.issue.number }}
          WORKFLOW_TRIGGER_TOKEN: ${{ secrets.WORKFLOW_TRIGGER_TOKEN }}
        with:
          github-token: ${{ secrets.WORKFLOW_TRIGGER_TOKEN }}
          script: |
            const path = require('path');
            const createTaskComments = require(path.join(process.cwd(), 'scripts', 'create-task-comments.js'));
            
            try {
              await createTaskComments({ github, context, core });
              console.log('✅ Task comments created with PAT token (comments appear under your account)');
            } catch (error) {
              console.log('❌ PAT token failed:', error.message);
              throw error;
            }
      
      - name: Create task comments from tasks (fallback with default token)
        if: steps.create-comments-pat.outcome == 'failure'
        uses: actions/github-script@v7
        env:
          PARENT_ISSUE_NUMBER: ${{ github.event.issue.number }}
          WORKFLOW_TRIGGER_TOKEN: ${{ secrets.WORKFLOW_TRIGGER_TOKEN }}
        with:
          github-token: ${{ github.token }}
          script: |
            const path = require('path');
            const createTaskComments = require(path.join(process.cwd(), 'scripts', 'create-task-comments.js'));
            
            console.log('⚠️ Using fallback mode with GITHUB_TOKEN:');
            console.log('   - Comments will appear as from github-actions bot');
            console.log('   - Automatic workflow triggering may not work');
            console.log('   - Configure WORKFLOW_TRIGGER_TOKEN secret for full functionality');
            
            try {
              await createTaskComments({ github, context, core });
              console.log('✅ Task comments created with fallback token');
            } catch (error) {
              console.log('❌ Task comment creation failed:', error.message);
              core.setFailed(error.message);
            }

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: task-decomposition
          path: |
            tasks.json
            created_tasks.json